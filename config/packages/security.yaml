security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\Password\UserPasswordHasherInterface: '@security.password_hasher'
        
    # Définition des rôles
    # role_hierarchy:
    #     ROLE_ADMIN: ROLE_USER
    #     ROLE_EMPLOYE: ROLE_USER
    #     ROLE_VETERINAIRE: ROLE_USER

    providers:
        # Définition du fournisseur d'utilisateur
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            # provider: app_user_provider
            # form_login:
            #     login_path: app_login
            #     check_path: app_login
            #     username_parameter: email  # Utilisation de 'email' au lieu de '_username'
            #     password_parameter: password
            #     default_target_path: /login
            #     success_handler: App\Security\LoginSuccessHandler
            # logout:
            #     path: logout
            #     target: /

    # Contrôle d'accès par rôle
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/employe, roles: ROLE_EMPLOYE }
        # - { path: ^/veterinaire, roles: ROLE_VETERINAIRE }
        # - { path: ^/login, roles: PUBLIC_ACCESS }

# Configuration spécifique pour les tests
when@test:
    security:
        password_hashers:
            # Réduction des coûts des hachages en test pour accélérer les tests
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4  # Valeur la plus basse pour bcrypt
                time_cost: 3  # Valeur la plus basse pour argon
                memory_cost: 10  # Valeur la plus basse pour argon
